// averages functions
global proc Mean()
{
    global float $numberOfTerms;
    
    global string $stringTerm[];
    global float $floatTerm[];
    
    float $listOfFloats[];
    global string $stringPower[];
    global int $intPower[];
    
    $floatTerm[0] = `floatField -q -value $stringTerm[0]`;
    $intPower[0] = `intField -q -value $stringPower[0]`;
    
    float $sum = Power($floatTerm[0], $intPower[0]);
    
    //Prints the list of numbers in order
    print("\nFor these numbers:\n");
    for( $i=0; $i<$numberOfTerms; ++$i )
	{
        $floatTerm[$i] = `floatField -q -value $stringTerm[$i]`;
        $intPower[$i] = `intField -q -value $stringPower[$i]`;
        
	    $listOfFloats[$i] = Power($floatTerm[$i], $intPower[$i]);
	    //print($listOfFloats[$i] + ", ");
	}
    
    $listOfFloats = `sort $listOfFloats`;

    for( $i=0; $i<$numberOfTerms; ++$i )
	{
	    print($listOfFloats[$i] + ", ");
	}
	
    print("\nThe Mean is:\n");
    /*if ($intPower[0] == 1)
    {
        print( "( " + $floatTerm[0] + " " );
    }
    else
    {
        print( $floatTerm[0] + "^" + $intPower[0] + " " );
    }*/
    
	for( $i=1; $i<$numberOfTerms; ++$i )
	{
        $floatTerm[$i] = `floatField -q -value $stringTerm[$i]`;
        $intPower[$i] = `intField -q -value $stringPower[$i]`;
    
        $sum += Power($floatTerm[$i], $intPower[$i]);
        
        /*if ($intPower[$i] == 1)
        {
            print("+ " + $floatTerm[$i] + " ");
        }
        else
        {
            print( "+ " + $floatTerm[$i] + "^" + $intPower[$i] + " " );
        }*/
        
    }
    
    $sum /= $numberOfTerms;
    
	//print(") / " + $numberOfTerms + " = " + $sum +"\n");
	print($sum +"\n");
}

global proc Median()
{
    global float $numberOfTerms;
    
    global string $stringTerm[];
    global float $floatTerm[];
    
    global string $stringPower[];
    global int $intPower[];
    
    float $listOfFloats[];
    int $medianNumber;
    float $sum;
    
    print("\nFor these numbers:\n");
    for( $i=0; $i<$numberOfTerms; ++$i )
	{
        $floatTerm[$i] = `floatField -q -value $stringTerm[$i]`;
        $intPower[$i] = `intField -q -value $stringPower[$i]`;
        
	    $listOfFloats[$i] = Power($floatTerm[$i], $intPower[$i]);
	    //print($listOfFloats[$i] + ", ");
	}
    
    $listOfFloats = `sort $listOfFloats`;

    for( $i=0; $i<$numberOfTerms; ++$i )
	{
	    print($listOfFloats[$i] + ", ");
	}
	
	if ($numberOfTerms%2 == 0) //check if even
	{
	    $medianNumber = ceil(($numberOfTerms)/2);
        $sum = ( $listOfFloats[$medianNumber-1]+$listOfFloats[$medianNumber] )/2;
	}
	else //if odd
	{
	    $medianNumber = ceil(($numberOfTerms)/2);
        $sum = $listOfFloats[$medianNumber-1];
	}
    
    print("\nThe Median is:\n" + $sum + "\n" );
}

global proc Mode()
{
    global float $numberOfTerms;
    
    global string $stringTerm[];
    global float $floatTerm[];
    
    global string $stringPower[];
    global int $intPower[];
    
    float $listOfFloats[]; //this  is the final value after addind the power
    int $maxNumber;
    float $sum;
    
    float $uniqeTerm[]; //storing uniqe terms
    int $uniqeTermFrequency[]; //storing how many times the uniqe term occours
    int $maxIndex = 0; //stores the index of the max number;
    int $maxIndexDup = 0;
    
    //Prints the list of numbers in order
    print("\nFor these numbers:\n");
    for( $i=0; $i<$numberOfTerms; ++$i )
	{
        $floatTerm[$i] = `floatField -q -value $stringTerm[$i]`;
        $intPower[$i] = `intField -q -value $stringPower[$i]`;
        
	    $listOfFloats[$i] = Power($floatTerm[$i], $intPower[$i]);
	    //print($listOfFloats[$i] + ", ");
	}
    
    $listOfFloats = `sort $listOfFloats`;

    for( $i=0; $i<$numberOfTerms; ++$i )
	{
	    print($listOfFloats[$i] + ", ");
	}
	
	//Finds and counts uniqe terms
    for( $i=0; $i<$numberOfTerms; ++$i )
	{
	   if ( !floatArrayContains($listOfFloats[$i], $uniqeTerm) )
	   {
	       $uniqeTerm[size($uniqeTerm)] = $listOfFloats[$i];
	       $uniqeTermFrequency[size($uniqeTerm)] = 1;
	   }
	   else
	   {
	       int $index;
	       $index = floatArrayFind( $listOfFloats[$i], 0, $uniqeTerm );
	       $uniqeTermFrequency[$index] += 1;
	   }
	}
	$uniqeTermFrequency[0] += 1; //fix a weird bug where the first unit in the 0 index is not counted
	
	//Display uniqe terms and frequency and finds number that occours the most
    for( $i=0; $i<size($uniqeTerm); ++$i )
	{
	    //print("\nThe number " + $uniqeTerm[$i] + " occurs " + $uniqeTermFrequency[$i] + " times");

	    if ( $uniqeTermFrequency[$i] >= $uniqeTermFrequency[$maxIndex] )
	    {
    	    if ( $uniqeTermFrequency[$i] > $uniqeTermFrequency[$maxIndex] )
    	    {
    	        $maxIndexDup = 1;
    	        $maxIndex = $i;
    	    }
    	    else if ( $uniqeTermFrequency[$i] == $uniqeTermFrequency[$maxIndex] )
    	    {
    	        $maxIndexDup += 1;
    	    }
	    }
	    
	}
	
    //Find the number that occurs the most and print it
    if ($maxIndexDup == 1)
    {
        print("\nThe MODE is " + $uniqeTerm[$maxIndex] + " and it occurs " + $uniqeTermFrequency[$maxIndex] + " times.\n" );
    }
    else
    {
        print("\nThere are " + $maxIndexDup + " MODES.\n" );
    }
     
}

global proc Range()
{
    global float $numberOfTerms;
    
    global string $stringTerm[];
    global float $floatTerm[];
    
    global string $stringPower[];
    global int $intPower[];
    
    float $listOfFloats[];
    int $maxNumber;
    float $sum;
    
    print("\nFor these numbers:\n");
    for( $i=0; $i<$numberOfTerms; ++$i )
	{
        $floatTerm[$i] = `floatField -q -value $stringTerm[$i]`;
        $intPower[$i] = `intField -q -value $stringPower[$i]`;
        
	    $listOfFloats[$i] = Power($floatTerm[$i], $intPower[$i]);
	    //print($listOfFloats[$i] + ", ");
	}
    
    $listOfFloats = `sort $listOfFloats`;

    for( $i=0; $i<$numberOfTerms; ++$i )
	{
	    print($listOfFloats[$i] + ", ");
	}
	
    $maxNumber = $numberOfTerms-1;
    $sum = ( $listOfFloats[$maxNumber]-$listOfFloats[0] );
	
    
    print("\nThe Range is:\n" + $sum + "\n" );
}
