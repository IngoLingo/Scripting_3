//Check if nje_Calculator exists then delete it
source MathFunctions;
source AverageFunctions;


if (`window -ex "nje_Calculator"`)
     {
     deleteUI nje_Calculator;
     windowPref -remove nje_Calculator;
     }   
     
//Set Up Variables
string $termLabel;
global float $numberOfTerms;
float $termsWindowHeight;

global string $stringTerm[];
global float $floatTerm[];

global string $stringPower[];
global int $intPower[];

global float $numberTest;
$numberTest = 0;

//Assign Variables
$numberOfTerms = 10; //  CHANGE NUMBER OF TERMS HERE  //

$termsWindowHeight = 20*$numberOfTerms + 40;


//Build the window
window -widthHeight 100 100  -menuBar true -resizeToFitChildren true nje_Calculator;

    //Frame layout
	columnLayout;
	        //Create a frame layout for showing current equasion (may remove)
	        /*frameLayout -label "CURRENT EQUASION";
				rowColumnLayout -width 400 -height 50 -numberOfColumns 1;
					text -label $numberTest;

				setParent ..;
			setParent ..;*/
			
			//Create a frame layout for terms
			frameLayout -collapsable true -label "INPUT NEW TERM";
                
                //Create layout inside INPUT NEW TERM frame
				rowColumnLayout -width 400 -height $termsWindowHeight -numberOfColumns 2 -columnAttach 1 "right" 0
                    -columnWidth 1 100 -columnWidth 2 200;
                    
                    //Empty Space
                    text -label  " "; text -label  " ";
                        
                    //Inside the window
            		for( $i=0; $i<$numberOfTerms; $i++ )
            		{
                        $termLabel = "Term " + string($i+1) + ":  ";
                        text -label  $termLabel;
                        
                        //$stringTerm[$i] = `floatField -value ($i+1)`; //Test
                        $stringTerm[$i] = `floatField -value 0`;
                        $floatTerm[$i] = `floatField -q -value $stringTerm[$i]`;
            		}
            		
                    
                    //Empty Space
                    text -label  " ";
                    
				setParent ..;
			setParent ..;
			
			//Create a frame layout for terms
			frameLayout -collapse true -collapsable true -label "TO THE POWER OF";

				//Create layout inside TO THE POWER OF frame
				rowColumnLayout -width 400 -height $termsWindowHeight -numberOfColumns 2 -columnAttach 1 "right" 0
                    -columnWidth 1 150 -columnWidth 2 150;
                    
                    //Empty Space
                    text -label  " "; text -label  " ";

                    //Inside the window
            		for( $i=0; $i<$numberOfTerms; $i++ )
            		{
                        $termLabel = "Tearm " + string($i+1) + ", to the power of :  ";
                        text -label  $termLabel;
                        
                        $stringPower[$i] = `intField -value 1`;
                        $intPower[$i] = `intField -q -value $stringPower[$i]`;
            		}
                    
                    
                    //Empty Space
                    text -label  " ";
                    
				setParent ..;
			setParent ..;

			//Create a collapsible frame for selecting an operator and average
			frameLayout -collapsable true -label "SELECT AN OPERATOR OR AVERAGE";

				//Create layout for Operators Title
				rowColumnLayout -width 400 -height 30; 
				    
					text -label " ";
					text -label "Operator";

				setParent ..;
				
				//Create layout for Operators
				rowColumnLayout -width 400 -height 20 -columnSpacing 1 50
				    -numberOfColumns 4 -columnWidth 1 50 -columnWidth 2 50 -columnWidth 3 50 -columnWidth 4 50
				    -columnSpacing 2 5 -columnSpacing 3 5 -columnSpacing 4 5;
				    
					//Create operator buttons
					button -label "+" -command "Add();"  -actOnPress false; 
					button -label "-" -command "Subtract();"  -actOnPress false; 
					button -label "*" -command "Multiply();"  -actOnPress false; 
					button -label "/" -command "Divide();"  -actOnPress false;

				setParent ..;
				
    			//Create layout for Averages Title
				rowColumnLayout -width 400 -height 30; 

					text -label " ";
					text -label "Average";

				setParent ..;
				
				//Create layout for Averages
				rowColumnLayout -width 400 -height 60 -columnSpacing 1 50
				    -numberOfColumns 4 -columnWidth 1 50 -columnWidth 2 50 -columnWidth 3 50 -columnWidth 4 50
				    -columnSpacing 2 5 -columnSpacing 3 5 -columnSpacing 4 5;
                    
					//Create avrage buttons					
					button -label "mean" -command "Mean();"  -actOnPress false; 
					button -label "median" -command "Median();"  -actOnPress false; 
					button -label "mode" -command "Mode();"  -actOnPress false; 
					button -label "range" -command "Range();"  -actOnPress false;

				setParent ..;
			setParent ..;

			//Create a collapsible frame layout for End frame
			/*
			frameLayout -collapse true -collapsable true -label "FIND END RESULT";

				//Create layout for End buttons
				rowColumnLayout -width 400 -height 100 -numberOfColumns 2 -columnAttach 1 "right" 0
                    -columnWidth 1 100 -columnWidth 2 200
                    -columnSpacing 2 40;
                    
                    //Empty Space
                    text -label  " "; text -label  " ";

					//Create buttons
					button -label " Restart " -command "restart"  -actOnPress false;
					button -label "Print Results" -command "printResults"  -actOnPress false;
					
                    //Empty Space
                    text -label  " ";

				setParent ..;
			setParent ..;
			*/

//Run the window
showWindow nje_Calculator;


//Processes/Functions
// test functions
proc func() {
    global float $numberTest;
    $numberTest += 1;
    showWindow nje_Calculator;
	print("Test Print: " + $numberTest + "\n");
}

proc restart() {
     print("restart window here\n");
}


// final print results function
/*proc printResults() {
    Add();
}*/
